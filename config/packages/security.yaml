security:
    enable_authenticator_manager: false
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        users:
            entity:
                # the class of the entity that represents users
                class: 'App\Entity\User\User'
                # the property to query by - e.g. username, email, etc
                property: 'externalId'

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        api:
            pattern: ^/api/attendances
            methods: ['POST']
            anonymous: true
            stateless: true
            guard:
                authenticators:
                    - App\Security\Authenticator\ApiKeyAuthenticator

        main:
            anonymous: true
            lazy: true
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800 # 1 week in seconds
                always_remember_me: true
            guard:
                authenticators:
                    - App\Security\Authenticator\DiscordAuthenticator
            logout:
                path: app_security_logout

    access_decision_manager:
        strategy: unanimous
        allow_if_all_abstain: false

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
